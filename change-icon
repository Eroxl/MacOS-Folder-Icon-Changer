#!/usr/bin/env python
import os
import random
import sys

import Cocoa


def change_icon(image: str, file: str):
    workspace = Cocoa.NSWorkspace.sharedWorkspace()
    workspace.setIcon_forFile_options_(
        Cocoa.NSImage.alloc().initWithContentsOfFile_(image),
        file, 
        0
    ) or sys.exit("Unable to set file icon")

# FIXME: Figure out a better way of doing this that auto generates the message
if len(sys.argv) < 3:
    print('ERROR: Invalid Argument Count \n\nOVERVIEW: A command-line tool to automatically change a folder/applications icon\n\nUSAGE: change-icon <image-path> <file-path>\n\nARGUMENTS:\n<image-path>            Path to the new icons image.\n<file-path>             Path to the file you want to icon of updated.')
    exit(0)

image_paths = [sys.argv[1]]
file_path = sys.argv[2]

# NOTE: Optional Arguments
recursive = '--recursive' in sys.argv # Change all the sub directories as well as files in a directory
randomize = '--randomize' in sys.argv  # Randomly change the icon from a path of images.

if randomize:
    image_paths = [os.path.join(image_paths[0], file) for file in os.listdir(image_paths[0]) if file.lower().endswith(('.png', '.jpg', '.jpeg'))]

if recursive:
    change_icon(random.choice(image_paths), file_path)
    for file in os.listdir(file_path):
        change_icon(random.choice(image_paths), os.path.join(file_path, file))
else:
    change_icon(random.choice(image_paths), file_path)
